[
    {
        "id": "0cc4c0c6c2328040",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a8aca068e4fd1796",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a6a7828e1949943d",
        "type": "subflow",
        "name": "Check User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 140,
                "wires": [
                    {
                        "id": "e469d9bd0a1280a1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 140,
                "wires": [
                    {
                        "id": "598c1d26d54ab038",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-user-secret"
    },
    {
        "id": "bf35cb9be863b2c0",
        "type": "subflow",
        "name": "Has Admin",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 40,
                "wires": [
                    {
                        "id": "8693c0ec1acde6c0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 40,
                "wires": [
                    {
                        "id": "8693c0ec1acde6c0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0DEED",
        "icon": "node-red/alert.svg"
    },
    {
        "id": "eda0bfeec9aa9bc2",
        "type": "subflow",
        "name": "Server founder",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "deaf91347b08264b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 20,
                "wires": [
                    {
                        "id": "deaf91347b08264b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#FFAAAA",
        "icon": "font-awesome/fa-diamond"
    },
    {
        "id": "d86a52201a0a0941",
        "type": "mongodb4-client",
        "name": "TODO DB",
        "protocol": "mongodb",
        "hostname": "127.0.0.1",
        "port": "27017",
        "dbName": "todo",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "feaee78f277b4be7",
        "type": "mongo-client",
        "uri": "mongodb://localhost:27017/todo",
        "name": "TODO DB",
        "options": ""
    },
    {
        "id": "0b3255ff459df453",
        "type": "mongodb3",
        "uri": "mongodb://127.0.0.1:27017/todo",
        "name": "TODO DB",
        "options": "",
        "parallelism": -1
    },
    {
        "id": "ac1719013b8f4fb6",
        "type": "mongodb4-client",
        "name": "TODO DB ",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "todo",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "ecb3cfc44c1a89bb",
        "type": "ui_group",
        "name": "Default",
        "tab": "58e9d76930e15253",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": "c"
    },
    {
        "id": "cf93c3de119548f8",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": "Main Group"
    },
    {
        "id": "58e9d76930e15253",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dabd10221c76c5a2",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6770b4da1f1de720",
        "type": "jwt verify",
        "z": "a6a7828e1949943d",
        "name": "",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "1234",
        "key": "",
        "signvar": "token",
        "storetoken": "token",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "598c1d26d54ab038",
                "bb976a0f80dce12d"
            ]
        ]
    },
    {
        "id": "598c1d26d54ab038",
        "type": "function",
        "z": "a6a7828e1949943d",
        "name": "function 4",
        "func": "if(!msg.token || msg.token.ip !== msg.req.ip){\n \n    return[null,msg]\n}\nmsg.user = msg.token\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 140,
        "wires": [
            [
                "71abc21a90079845"
            ],
            [
                "2728da0497fbb03d"
            ]
        ]
    },
    {
        "id": "e469d9bd0a1280a1",
        "type": "function",
        "z": "a6a7828e1949943d",
        "name": "function 5",
        "func": "msg.token = msg.req.cookies.token || \"\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 140,
        "wires": [
            [
                "6770b4da1f1de720",
                "f9c58176dfac4ff0"
            ]
        ]
    },
    {
        "id": "484a9cfc2eaf7ac7",
        "type": "http response",
        "z": "a6a7828e1949943d",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 1080,
        "y": 180,
        "wires": []
    },
    {
        "id": "d352bb3919d76294",
        "type": "catch",
        "z": "a6a7828e1949943d",
        "name": "",
        "scope": [
            "6770b4da1f1de720"
        ],
        "uncaught": false,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "598c1d26d54ab038",
                "e6fabacbc3b5be14"
            ]
        ]
    },
    {
        "id": "2728da0497fbb03d",
        "type": "debug",
        "z": "a6a7828e1949943d",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 360,
        "wires": []
    },
    {
        "id": "71abc21a90079845",
        "type": "debug",
        "z": "a6a7828e1949943d",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "bb976a0f80dce12d",
        "type": "debug",
        "z": "a6a7828e1949943d",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 60,
        "wires": []
    },
    {
        "id": "f9c58176dfac4ff0",
        "type": "debug",
        "z": "a6a7828e1949943d",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "e6fabacbc3b5be14",
        "type": "function",
        "z": "a6a7828e1949943d",
        "name": "function 27",
        "func": "msg.cookies = {\n    token:null\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 260,
        "wires": [
            [
                "a4cc585328186935",
                "484a9cfc2eaf7ac7"
            ]
        ]
    },
    {
        "id": "a4cc585328186935",
        "type": "debug",
        "z": "a6a7828e1949943d",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 320,
        "wires": []
    },
    {
        "id": "8693c0ec1acde6c0",
        "type": "function",
        "z": "bf35cb9be863b2c0",
        "name": "function 8",
        "func": "if(msg.user && msg.user.roles && msg.user.roles.includes(\"admin\")) return msg\n\nreturn [null,msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 40,
        "wires": [
            [
                "a8c3dd3dc456eca7"
            ],
            [
                "a68607d4172dd43f",
                "487bb2089cb6bdc7"
            ]
        ]
    },
    {
        "id": "a68607d4172dd43f",
        "type": "http response",
        "z": "bf35cb9be863b2c0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 460,
        "y": 100,
        "wires": []
    },
    {
        "id": "a8c3dd3dc456eca7",
        "type": "debug",
        "z": "bf35cb9be863b2c0",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 180,
        "wires": []
    },
    {
        "id": "487bb2089cb6bdc7",
        "type": "debug",
        "z": "bf35cb9be863b2c0",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 160,
        "wires": []
    },
    {
        "id": "deaf91347b08264b",
        "type": "function",
        "z": "eda0bfeec9aa9bc2",
        "name": "function 19",
        "func": "if(msg.user && msg.user.roles && msg.user.roles.includes(\"founder\")) return msg\n\nreturn [null,msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 60,
        "wires": [
            [],
            [
                "1143a51107dde1d9"
            ]
        ]
    },
    {
        "id": "1143a51107dde1d9",
        "type": "http response",
        "z": "eda0bfeec9aa9bc2",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "08ee88fe154cd5c3",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 320,
        "wires": [
            [
                "f328b72c86726d72"
            ]
        ]
    },
    {
        "id": "bc87b02a2a309ca1",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 320,
        "wires": []
    },
    {
        "id": "97b89d4c0a592dde",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.todo.find()",
        "func": "let query = msg.user.roles.includes(\"admin\") ? {} :\n    {\n        \"stamp.username\": msg.user.username\n    }\nmsg.payload = [[\n    {\n        $match: query\n\n    },\n    {\n        $sort: {\n            \"stamp.createdAt\": -1\n        }\n    }\n\n]]\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\nmsg.hasFounder = msg.user.roles.includes(\"founder\")\nreturn msg\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "874778ae2c6269d5"
            ]
        ]
    },
    {
        "id": "0d9de66c032182ee",
        "type": "link in",
        "z": "0cc4c0c6c2328040",
        "name": "link in 1",
        "links": [
            "f16e87a73a2bca1c",
            "3643c6c95b0cd4a1",
            "34db0eda511d0010",
            "3fe50177df38e5d5"
        ],
        "x": 155,
        "y": 260,
        "wires": [
            [
                "f328b72c86726d72"
            ]
        ]
    },
    {
        "id": "6954603b0cce474a",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/opt/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 720,
        "wires": [
            [
                "b2cfdc40d2c1a0d8"
            ]
        ]
    },
    {
        "id": "c84305e6addf86a2",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 1000,
        "y": 660,
        "wires": []
    },
    {
        "id": "11be6e1cb551f70e",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.todo.opt()",
        "func": "const date = new Date();\nconst now = date.getTime();\n\nmsg.formData = msg.payload\n\n\nif (msg.req.params.type === \"add\") {\n\n    msg.payload = {\n        id: now,\n        name: msg.formData.name,\n        done: false,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: msg.user.username || \"\", // ⚠️ Görevin sahibi olarak mevcut kullanıcı kaydediliyor\n            email: msg.user.email || \"\"\n        },\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\")\n    }\n    return msg\n}\n\n    msg.payload = [{\n        _id: msg.formData.id\n    }]\n\n\n\n    return[null,msg]\n\n    \n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 700,
        "wires": [
            [
                "0aa673e16f8a5deb"
            ],
            [
                "ddce2a96140f568c"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err"
        ]
    },
    {
        "id": "640d0ebe2cf2ef0d",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "validation",
        "func": "const typeLookup = {\n    trash: {\n    text: \"Silmek\",\n    requireArg: [\"id\"]\n    },\n    complete: {\n    text: \"Tamamlamak\",\n    requireArg: [\"id\"]\n    },\n    open: {\n    text: \"Açmak\",\n    requireArg: [\"id\"]\n    },\n    add: {\n    text: \"Eklemek\",\n    requireArg: [\"name\"]\n    \n    },\n    update: {\n        text: \"Güncellemek\",\n        requireArg: [\"id\"]\n    },\n    schedule:{\n        text: \"Hatırlatma kurmak\",\n        requireArg: [\"id\"]\n    }\n   \n}\n\nif (!Object.keys(typeLookup).includes(msg.req.params.type)){\n    msg.error = {\n        message: `${msg.req.params.type} geçersiz bir parametre değeridir.`\n    }\n    return [null, msg]\n}\n\n\nif (!msg.payload[typeLookup[msg.req.params.type].requireArg]) {\n\n    msg.error = {\n        message: `${typeLookup[msg.req.params.type].text} istediğiniz elemanın ${typeLookup[msg.req.params.type].requireArg} bilgisi olmalı.`\n\n\n    \n    }\n    return[null,msg]\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 720,
        "wires": [
            [
                "11be6e1cb551f70e"
            ],
            [
                "3643c6c95b0cd4a1"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "3643c6c95b0cd4a1",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "0d9de66c032182ee"
        ],
        "x": 615,
        "y": 780,
        "wires": []
    },
    {
        "id": "eec4273b2f97e6dd",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 420,
        "wires": [
            [
                "bdacdd142cc1efed"
            ]
        ]
    },
    {
        "id": "617ca845c20f6e87",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.todo.findOne()",
        "func": "msg.payload =[{\n    _id: msg.req.params.id\n}]\n\nif(!msg.user.roles.includes(\"admin\")) msg.payloa[\"stamp.username\"] = msg.user.username\nreturn msg\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "fb7d092cbc2b3bae"
            ],
            [
                "34db0eda511d0010"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err"
        ]
    },
    {
        "id": "8849c6b68bda9f54",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\">\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form action=\"/opt/update\" method=\"POST\">\n                    <input type=\"hidden\" name=\"id\" value=\"{{payload._id}}\"/>\n                    <div class=\"mb-3\">\n                        <input required type=\"text\" name=\"name\" value=\"{{payload.name}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"\">\n                    </div>\n                    <div class=\"mb-3 float-end\">\n                        <a class=\"btn btn-warning\" href=\"/\">Vazgeç</a>\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-success px-5\" type=\"submit\">Güncelle</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1120,
        "y": 400,
        "wires": [
            [
                "62652e890d7d2889"
            ]
        ]
    },
    {
        "id": "34db0eda511d0010",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "0d9de66c032182ee"
        ],
        "x": 685,
        "y": 480,
        "wires": []
    },
    {
        "id": "62652e890d7d2889",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 400,
        "wires": []
    },
    {
        "id": "f723d1efd978b068",
        "type": "crontinject",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "todo",
                "v": "todo",
                "vt": "msg"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 880,
        "y": 840,
        "wires": [
            [
                "929ad8e88b223f56"
            ]
        ]
    },
    {
        "id": "18dfd753a7c5a654",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/schedule/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 560,
        "wires": [
            [
                "5b364d6974f9db49"
            ]
        ]
    },
    {
        "id": "43afe62a02ab8b14",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.todo.findOne()",
        "func": "msg.payload =[{\n    _id: msg.req.params.id\n}]\n\nif(!msg.user.roles.includes(\"admin\")) msg.payload[\"stamp.username\"] = msg.user.username\nreturn msg\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 560,
        "wires": [
            [
                "4ad93377802abd24"
            ]
        ],
        "outputLabels": [
            "Succ"
        ]
    },
    {
        "id": "bc87785276fb47aa",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\">\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form action=\"/opt/schedule\" method=\"POST\">\n                    <input type=\"hidden\" name=\"id\" value=\"{{payload._id}}\"/>\n                    <div class=\"mb-3\">\n                        <input required type=\"datetime-local\" name=\"datetime\" value=\"{{payload.schedule.formData.datetime}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"gg.aa.yyyy ss:dd\">\n                    </div>\n                    <div class=\"mb-3 float-end\">\n                        <a class=\"btn btn-warning\" href=\"/\">Vazgeç</a>\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-success px-5\" type=\"submit\">Planla</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1080,
        "y": 540,
        "wires": [
            [
                "410b28685b78d3d1"
            ]
        ]
    },
    {
        "id": "410b28685b78d3d1",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 540,
        "wires": []
    },
    {
        "id": "84d75843ca48f224",
        "type": "inject",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "a8fe7b3d36c039bb"
            ]
        ]
    },
    {
        "id": "b9f20e53c9d24617",
        "type": "e-mail",
        "z": "0cc4c0c6c2328040",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1390,
        "y": 840,
        "wires": []
    },
    {
        "id": "d08f32dc8cfb0a16",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p> Merhaba {{msg.payload[displayName]}} ,</p>\n<p> </p>\n{{todo.name}} işinizi hatırlatmak istiyoruz.\n<p> </p>\n",
        "output": "str",
        "x": 1220,
        "y": 840,
        "wires": [
            [
                "b9f20e53c9d24617"
            ]
        ]
    },
    {
        "id": "929ad8e88b223f56",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "header",
        "func": "if(msg.schedules){\n    msg.payload=[\n        {\n            _id: msg.formData.id\n        },\n        {\n            $set:{\n                schedule:  msg.response\n            }\n        }\n    ]\n    return [null,msg]\n}\n\n\n// Zamanı geldi, mail ayarlarını yap\nmsg.from = \"noreply <noreply@todo.com>\";\nmsg.to = \"okan.blc14@gmail.com\";\n\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 840,
        "wires": [
            [
                "d08f32dc8cfb0a16"
            ],
            [
                "b63ccea2096548dc"
            ]
        ]
    },
    {
        "id": "5ff5e40705b66bba",
        "type": "link in",
        "z": "0cc4c0c6c2328040",
        "name": "link in 2",
        "links": [
            "c09cfc20fee5e041",
            "b9d62a5bb705c0b9"
        ],
        "x": 755,
        "y": 860,
        "wires": [
            [
                "9ec8900d3213056e",
                "f723d1efd978b068"
            ]
        ]
    },
    {
        "id": "c09cfc20fee5e041",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "5ff5e40705b66bba"
        ],
        "x": 1015,
        "y": 160,
        "wires": []
    },
    {
        "id": "0c50ebff63cb81f8",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/user-list",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 70,
        "y": 980,
        "wires": [
            [
                "21d011acb55bc12b"
            ]
        ]
    },
    {
        "id": "6057ca61bb10d6f7",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.user.find()",
        "func": "msg.payload = [[\n    {\n        $match: {\n\n        }\n    },\n    {\n\n        $sort:{\n            \"stamp.createdAt\":1\n        }\n\n    },\n    {\n        $addFields: {\n            hasAdmin: {\n\n                $cond: [{ $in: [\"admin\", \"$roles\"] }, true, false]\n            },\n             hasFounder: {\n\n                $cond: [{ $in: [\"founder\", \"$roles\"] }, true, false]\n            }\n\n        }\n    }\n\n]]\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 980,
        "wires": [
            [
                "80dd60df305f4ec1"
            ]
        ]
    },
    {
        "id": "4ebebb578f3ba841",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html> \n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Kullanıcı Listesi</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\"> --->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\" integrity=\"sha512-t7Few9xlddEmgd3oKZQahkNI4dS6l80+eGEzFQiqtyVYdvcSG2D3Iub77R20BdotfRPA9caaRkg1tyaJiPmO0g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" /> \n    <style>\n        body {\n           background-color: #404159;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container mt-5\">\n        <!-- Görev Ekleme Formu -->\n        <div class=\"row mb-4\">\n            <div class=\"col-md-10 offset-md-1\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form action=\"/user-opt/add\" method=\"POST\">\n                    <div class=\"input-group input-group-lg\">\n                         <input required type=\"text\" name=\"username\"  value=\"{{error.formData.username}}\" id=\"username-input\" class=\"form-control {{#error}}border-danger{{/error}}\" placeholder=\"Kullanıcı Adı\">\n                        <input required type=\"password\" name=\"password\" value=\"{{error.formData.password}}\"  id=\"password-input\" class=\"form-control {{#error}}border-danger{{/error}}\" placeholder=\"Parola\">\n                        <input required type=\"email\" name=\"email\"  value=\"{{error.formData.email}}\" id=\"email-input\" class=\"form-control {{#error}}border-danger{{/error}}\" placeholder=\"E-Posta Adresi\">\n                       \n                        <button style=\"background-color: #be0000; color:white\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"clear-btn\">Temizle</button>\n                        <button class=\"btn btn-primary\" type=\"submit\">Ekle</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n     \n        <div class=\"row\">\n            <div class=\"col-md-10 offset-md-1\">\n                <table  class=\"table table-bordered\">\n                    <thead class=\"table-dark\">\n                        <tr>\n                            <th>Kullanıcı Adı</th>\n                            <th >İsim Soyisim</th>\n                            <th>E-Posta </th> \n                            <th> </th>\n                           \n                           \n                            \n                            \n                           \n                        </tr>\n                    </thead>\n                    <tbody id=\"task-body\">\n                        {{#payload}}\n                        <tr valign=\"middle\">\n                            <td>\n                                  \n                                {{#active}}\n                                \n                            <h4>{{#hasFounder}}\n                               <i class=\"bi bi-person-badge\"></i>\n                                {{/hasFounder}}\n                                {{#hasAdmin}}\n                                <i class=\"bi bi-incognito\"></i>\n                                {{/hasAdmin}}   \n                                {{username}}</h4>\n                                {{/active}}\n                                {{^active}}\n                                <h4 class=\"text-muted\"><del>{{username}}</del></h4>\n                                {{/active}}\n                                <div class=\"badge bg-secondary\"><small><i class=\"bi bi-calendar\"></i> {{date}} {{time}}</small></div>\n                            </td>\n                            <td> {{displayName}}</td>\n                             <td> {{email}}</td>\n                            <td align=\"right\">\n                                <div class=\"btn-group\">\n                                     <a href=\"/user-edit/{{_id}}\" data-bs-toggle=\"tooltip\" data-bs-title=\"Düzenle\" class=\"btn btn-primary btn-sm\"><i class=\"bi bi-pencil\"></i></a>\n                                </div>\n                            </td>\n                        </tr>\n                        {{/payload}}\n                        {{^payload}}\n                        <tr class=\"text-muted\">\n                            <td colspan=\"2\">Henüz hiç kullanıcı tanımlanmadı.</td>\n                        </tr>\n                        {{/payload}}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div class= \"position-relative\">\n        <a href= \"/\" class= \"btn btn-warning btn-lg position-fixed bottom-0 end-0 m-5 shadow-sm\"  >  <i class=\"bi bi-card-checklist\"></i></a>\n        \n         </div>\n\n\n    <!-- JS -->\n    <script>\n        // Temizle butonuna tıklanınca input alanını temizle\n        document.getElementById(\"clear-btn\").addEventListener(\"click\", function () {\n            document.getElementById(\"username-input\").value = \"\";\n            document.getElementById(\"password-input\").value = \"\";\n        });\n    </script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    </script>\n</body>\n</html>\n\n",
        "output": "str",
        "x": 1080,
        "y": 980,
        "wires": [
            [
                "d13507c617e1fbdb"
            ]
        ]
    },
    {
        "id": "d13507c617e1fbdb",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 980,
        "wires": []
    },
    {
        "id": "7f94541bb731f113",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/user-opt/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 1060,
        "wires": [
            [
                "27c72b3d698af0f1"
            ]
        ]
    },
    {
        "id": "e21fd8c10c465ae9",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "validation",
        "func": "const typeLookup = {\n    add: {\n        text: \"Eklemek\",\n        requireArg: [\"username\",\"password\",\"email\"],\n        validation: {\n            email(data,formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data) }\n        }\n\n    },\n    update: {\n        text: \"Güncellemek\",\n        requireArg: [\"id\",\"!username\",\"password\",\"email\",\"roles\"],\n        validation : {\n            email(data,formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data) }  //&& !global.get(\"DB\").user.some(u => u.id != formData.id && u.email === data)                       \n    }\n    }\n}\n\nif (!Object.keys(typeLookup).includes(msg.req.params.type)) {\n    msg.error = {\n        message: `${msg.req.params.type} geçersiz bir parametre değeridir.`\n       , formData: msg.formData\n    }\n    return msg.req.headers.referer.includes(\"user-edit\")? [null,null,msg] : [null, msg]\n}\n\nlet fields = Object.keys(msg.payload)\n\nif (!typeLookup[msg.req.params.type].requireArg.every(arg => {\n    return (\n        ((typeLookup[msg.req.params.type].validation && typeLookup[msg.req.params.type].validation[arg]) \n            ? typeLookup[msg.req.params.type].validation[arg](msg.payload[arg],msg.payload) \n            : true) \n        && (arg.startsWith(\"!\") ? !fields.includes(arg.substr(1)) : fields.includes(arg))\n    );\n})) {\n    msg.error = {\n        message: `${typeLookup[msg.req.params.type].text} istediğiniz elemanın ${typeLookup[msg.req.params.type].requireArg} bilgisi olmamalı.`\n        ,formData: msg.formData\n    }\n    msg.referer= msg.req.headers.referer\n    return msg.req.headers.referer.includes(\"user-edit\") ? [null, null, msg] : [null, msg]\n}\n\nmsg.payload.roles = Array.isArray(msg.payload.roles) ? msg.payload.roles : [msg.payload.roles]\nmsg.formData = msg.payload\nreturn msg;",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "3ba3927a83c3b09c"
            ],
            [
                "f6d5fa0af3b4dab0",
                "12150dc27d38887a"
            ],
            [
                "2f610f865658eca7",
                "fe63c536970f658d"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid",
            ""
        ]
    },
    {
        "id": "a7be29904e93cae0",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.user.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\n\n\nif (msg.req.params.type === \"add\") {\n\n    msg.payload= {\n        id: now,\n        active: true,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: msg.user.username ||\"\",\n            email: msg.user.email || \"\"\n        },\n        roles:[\"user\"],\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\"),\n        ...msg.formData\n    }\n    return msg \n\n}\nmsg.payload = [{\n    _id: msg.formData.id\n}]\nreturn[null,msg]\n\n   ",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 1120,
        "wires": [
            [
                "5c249bb7db68a85a"
            ],
            [
                "7eda7851b489ba76",
                "e1d6a6892a20b778"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err"
        ]
    },
    {
        "id": "1626e9a096df1090",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/user-list"
        },
        "x": 2060,
        "y": 1040,
        "wires": []
    },
    {
        "id": "09fe0e0e8538b543",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "3f543f7aee49f5ed"
        ],
        "x": 2235,
        "y": 1180,
        "wires": []
    },
    {
        "id": "02abb43af3486952",
        "type": "bcrypt",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "formData.password",
        "assignment": "assign",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 1560,
        "y": 1040,
        "wires": [
            [
                "a7be29904e93cae0"
            ]
        ]
    },
    {
        "id": "5ce9583789cd4a77",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/user-edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "fd39da4330d05235"
            ]
        ]
    },
    {
        "id": "93e71f31c7661674",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.user.findOne()",
        "func": "msg.formData = msg.payload\nmsg.payload = [{\n    _id:msg.formData.id || msg.req.params.id\n},\n{\n    projection:{\n        password: 0\n    }\n}\n]\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1260,
        "wires": [
            [
                "da5a40583179d5b4",
                "c8d507412b537e3c"
            ]
        ],
        "outputLabels": [
            "Succ"
        ],
        "info": "### # ## "
    },
    {
        "id": "4e529e9ebabf6a8c",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Kullanıcı Listesi</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\">\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form action=\"/user-opt/update\" method=\"POST\">\n                    <input type=\"hidden\" name=\"id\" value=\"{{payload._id}}\"/>\n                    <div class=\"mb-3\">\n                        <label for=\"username\" class=\"form-label\">Kullanıcı Adı</label>\n                          <div class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\">{{payload.username}}</div>\n                         </div>\n                     <div class=\"mb-3\">\n                        <label for=\"displayName\" class=\"form-label\">İsim Soyisim</label>\n                        <input  type=\"text\" name=\"displayName\" value=\"{{payload.displayName}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"İsim Soyisim\">\n                        </div>\n                        <div class=\"mb-3\">\n                        <label for=\"email\" class=\"form-label\">E-Posta</label>\n                        <input required type=\"email\" name=\"email\" value=\"{{payload.email}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\">\n                        </div>\n                         <div class=\"mb-3\">\n                        <label for=\"password\" class=\"form-label\">Parola</label>\n                         <input type=\"password\" name=\"password\"  class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"Parola\">\n                                      \n                     <div class=\"form-check form-check-inline\">\n                      <input {{#payload.active}}checked{{/payload.active}} class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"active\" value=\"active\">\n                      <label class=\"form-check-label\" for=\"active\">\n                        Aktif\n                      </label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                      <input {{^payload.active}}checked{{/payload.active}} class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"pasive\" value=\"pasive\">\n                      <label class=\"form-check-label\" for=\"pasive\">\n                        Pasif\n                      </label>\n                    </div>\n                     <div class=\"mb-3\">\n                    <div class=\"form-check form-check-inline\">\n                    <input {{#hasUser}}checked {{/hasUser}} class=\"form-check-input\" type=\"checkbox\"  name= \"roles\"  id=\"user\" value=\"user\">\n                    <label class=\"form-check-label\" for=\"user\">Standart Kullanıcı</label>\n                    </div>\n                    <div class=\"form-check form-check-inline\">\n                    <input {{#hasAdmin}}checked {{/hasAdmin}} class=\"form-check-input\" type=\"checkbox\" name=\"roles\" id=\"admin\" value=\"admin\">\n                    <label class=\"form-check-label\" for=\"admin\">Yetkili Kullanıcı</label>\n                    </div>\n                     </div>\n\n                   <div class=\"mb-3 float-end\">\n                        <a class=\"btn btn-warning\" href=\"/user-list\">Vazgeç</a>\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-success px-5\" type=\"submit\">Güncelle</button>\n                    </div>\n              \n                </form>\n            </div>\n        </div>\n    </div>\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1140,
        "y": 1180,
        "wires": [
            [
                "bf835290872eeecc"
            ]
        ]
    },
    {
        "id": "bf835290872eeecc",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1290,
        "y": 1200,
        "wires": []
    },
    {
        "id": "18431a90e3241614",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 1",
        "func": "if(msg.formData.password) return msg\ndelete msg.formData.password \nreturn [null,msg]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1040,
        "wires": [
            [
                "02abb43af3486952",
                "b69b7dbe427beba9"
            ],
            [
                "a7be29904e93cae0",
                "dbfe81134c9dc46c"
            ]
        ]
    },
    {
        "id": "b7b8222759038941",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1500,
        "wires": [
            [
                "e0725fc6dbd54584"
            ]
        ]
    },
    {
        "id": "d0af357cfc59a3a8",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\"> --->\n    <video class=\"delete-effect\" src=\"/video/trashx.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <video class=\"check-effect\" src=\"/video/check.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\" integrity=\"sha512-t7Few9xlddEmgd3oKZQahkNI4dS6l80+eGEzFQiqtyVYdvcSG2D3Iub77R20BdotfRPA9caaRkg1tyaJiPmO0g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" /> \n    <style>\n        body {\n            background-color: #404159;\n\n        }\n        {{css}}\n    </style>\n    \n</head>\n<body>\n\n\n<div id=\"login\">\n<div class=\"container\">\n            <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n                <div id=\"login-column\" class=\"col-md-5\">\n                      {{#error}}\n                        <div class =\"alert alert-danger my-3 shadow\">\n                            {{message}}\n                        </div>\n                        {{/error}}\n                        \n                    <div id=\"login-box\" class=\"col-md-12\">\n                      \n                        \n                        <form  id=\"login-form\" class=\"form\" action=\"login\" method=\"post\">\n                          \n                            <div class=\"form-group\">\n                                <label   for=\"username\" class=\"text-black\">Kullanıcı Adı:</label><br>\n                                <input required type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" value=\"{{payload.username}}\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\" class=\"text-black\">Şifre:</label><br>\n                                <input required type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" value= \"{{formData.password}}\">\n                            </div>\n                          <div class=\"form-group\">\n                            <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md mt-3 w-100\" value=\"Giriş\">\n\n                            <div class=\"d-flex justify-content-between mt-3\">\n                                <a href=\"/sifre\" class=\"btn btn-danger\">Şifremi Unuttum</a>\n                                <a href=\"/kayit\" class=\"btn btn-danger\">Kayıt Ol</a>\n                            </div>\n                        </div>\n                              \n                                                                     \n                          \n                           \n                            \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>",
        "output": "str",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "3df02e2724c81165"
            ]
        ]
    },
    {
        "id": "3df02e2724c81165",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 620,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e0725fc6dbd54584",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "css",
        "field": "css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "plain",
        "template": "body {\n    margin: 0;\n    padding: 0;\n    background-color: #404159;\n   \n}\n\n#login .container #login-row #login-column #login-box {\n    margin-top: 120px;\n    max-width: 600px;\n  \n    border: 1px solid #9C9C9C;\n    background-color: #EAEAEA;\n}\n\n#login .container #login-row #login-column #login-box #login-form {\n    padding: 20px;\n}\n\n#login .container #login-row #login-column #login-box #login-form #register-link {\n    margin-top: -85px;\n}\n.alert-danger {\n    max-width: 600px;\n    /* login-box ile aynı genişlik */\n    margin: 20px auto;\n    /* Ortalamak için */\n}\n",
        "output": "str",
        "x": 320,
        "y": 1500,
        "wires": [
            [
                "d0af357cfc59a3a8",
                "39eef1aa1a022816"
            ]
        ]
    },
    {
        "id": "873124bbeccfd58d",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 112.8571548461914,
        "y": 1668.571460723877,
        "wires": [
            [
                "5c88dfe22cc2fe2b"
            ]
        ]
    },
    {
        "id": "b173ffbcb3f68a33",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 2",
        "func": "if(!msg.match){\n  \n    msg.error={\n        message: \"Kullanıcı adı ve parola hatalı.\"\n    }\n    return[null,msg]\n\n\n\n}\nmsg.payload = {\n    username: msg.user.username,\n    email: msg.user.email,\n    displayName: msg.user.displayName,\n    roles: msg.user.roles,\n    ip:msg.req.ip\n\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1580,
        "wires": [
            [
                "4cc18832ebbb0a29",
                "da6b1677d630a72e"
            ],
            [
                "22ca86782ef23d5c",
                "0732f3fc3b999c52"
            ]
        ]
    },
    {
        "id": "5c88dfe22cc2fe2b",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "findUser",
        "func": "if (!msg.payload.username || !msg.payload.password) {\n    msg.error = {\n        message: \"Kullanıcı adı ve parola doldurulmalıdır.\"\n    };\n    return [null, msg];\n}\nmsg.formData = msg.payload\nmsg.payload = {\n    username: msg.payload.username\n}\n\n\n\n// bcrypt karşılaştırması burada yapılmalı\nreturn msg;\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 322.8571548461914,
        "y": 1668.571460723877,
        "wires": [
            [
                "63d035f068afb724"
            ],
            [
                "9c4f960f2290d59a"
            ]
        ]
    },
    {
        "id": "61194be046650638",
        "type": "bcrypt",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "action": "verify",
        "field": "formData.password",
        "hash": "user.password",
        "target": "payload",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 860,
        "y": 1580,
        "wires": [
            [
                "b173ffbcb3f68a33",
                "440ddbef0f113d97"
            ]
        ]
    },
    {
        "id": "69f7835a69ef392b",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 3",
        "func": "msg.cookies = {\n    token:msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "a1f39f85475d3b10",
                "cff747a9b59fc9b3"
            ]
        ]
    },
    {
        "id": "6ca6611536db4c0c",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 2140,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4cc18832ebbb0a29",
        "type": "jwt sign",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "alg": "HS256",
        "exp": "36000",
        "jwkurl": "",
        "jwkkid": "",
        "secret": "1234",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1160,
        "y": 1560,
        "wires": [
            [
                "69f7835a69ef392b",
                "2425d59ec5b1287f"
            ]
        ]
    },
    {
        "id": "3e1eca658fbb31c4",
        "type": "link in",
        "z": "0cc4c0c6c2328040",
        "name": "link in 5",
        "links": [
            "dd3dcef35baec74a",
            "22ca86782ef23d5c"
        ],
        "x": 185,
        "y": 1560,
        "wires": [
            [
                "e0725fc6dbd54584",
                "39eef1aa1a022816"
            ]
        ]
    },
    {
        "id": "22ca86782ef23d5c",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "3e1eca658fbb31c4"
        ],
        "x": 1135,
        "y": 1620,
        "wires": []
    },
    {
        "id": "f328b72c86726d72",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "97b89d4c0a592dde"
            ]
        ]
    },
    {
        "id": "4aebc99f8c6c81dd",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1840,
        "wires": [
            [
                "20e3c7558fd8ea31",
                "041b1521704a16c9"
            ]
        ]
    },
    {
        "id": "20e3c7558fd8ea31",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 6",
        "func": "const token = msg.req.cookies.token;\nmsg.payload = {\n  token: msg.req.cookies.token,\n  blacklistedAt: new Date()\n};\nmsg.cookies= {\n    token: null\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1840,
        "wires": [
            [
                "1c7f7571ad3c4f56",
                "75a6ce7cb11808bb"
            ]
        ]
    },
    {
        "id": "709742027dfeeeae",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 660,
        "y": 1840,
        "wires": []
    },
    {
        "id": "bdacdd142cc1efed",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 310,
        "y": 420,
        "wires": [
            [
                "617ca845c20f6e87"
            ]
        ]
    },
    {
        "id": "5b364d6974f9db49",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 290,
        "y": 560,
        "wires": [
            [
                "43afe62a02ab8b14"
            ]
        ]
    },
    {
        "id": "b2cfdc40d2c1a0d8",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 290,
        "y": 720,
        "wires": [
            [
                "640d0ebe2cf2ef0d"
            ]
        ]
    },
    {
        "id": "21d011acb55bc12b",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 250,
        "y": 980,
        "wires": [
            [
                "25153d573f2ab15b"
            ]
        ]
    },
    {
        "id": "27c72b3d698af0f1",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "464fc746ed8a20a6"
            ]
        ]
    },
    {
        "id": "fd39da4330d05235",
        "type": "subflow:a6a7828e1949943d",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 350,
        "y": 1260,
        "wires": [
            [
                "93e71f31c7661674"
            ]
        ]
    },
    {
        "id": "25153d573f2ab15b",
        "type": "subflow:bf35cb9be863b2c0",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 410,
        "y": 980,
        "wires": [
            [
                "0b7cd97bfe22a2d7"
            ]
        ]
    },
    {
        "id": "3f543f7aee49f5ed",
        "type": "link in",
        "z": "0cc4c0c6c2328040",
        "name": "link in 4",
        "links": [
            "7d6812bf8ff11c91",
            "09fe0e0e8538b543",
            "b189499f127796bf",
            "f6d5fa0af3b4dab0"
        ],
        "x": 195,
        "y": 900,
        "wires": [
            [
                "21d011acb55bc12b"
            ]
        ]
    },
    {
        "id": "9b5da92d863ede82",
        "type": "link in",
        "z": "0cc4c0c6c2328040",
        "name": "link in 3",
        "links": [
            "1be902d6c20e3035",
            "2f610f865658eca7"
        ],
        "x": 165,
        "y": 1320,
        "wires": [
            [
                "fd39da4330d05235",
                "f4c5a0775ddfecf8"
            ]
        ]
    },
    {
        "id": "464fc746ed8a20a6",
        "type": "subflow:bf35cb9be863b2c0",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 530,
        "y": 1060,
        "wires": [
            [
                "e21fd8c10c465ae9"
            ]
        ]
    },
    {
        "id": "95b41d36a3aae05e",
        "type": "inject",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "e024d96abd8db50d"
            ]
        ]
    },
    {
        "id": "628861ecaffdd199",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 820,
        "y": 60,
        "wires": [
            [
                "da87d016d61042a3"
            ]
        ]
    },
    {
        "id": "da87d016d61042a3",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 60,
        "wires": []
    },
    {
        "id": "3a0409017fc4f1c6",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 9",
        "func": "if(msg.payload) return\n\n\nmsg.payload={\n    \n        \"displayName\": \"admin\",\n            \"active\": true,\n                \"username\": \"admin\",\n    \"password\": \"$2a$10$aw6bIpjDelCEWiVPfeZfquqTsIM1Y6AkvycWFTTw6bSQ6rupLTbAa\",\n                        \"email\": \"admin@gmail.com\",\n                            \"roles\": [\"founder\"],\n                            \"stamp\": {\n                                \"createdAt\": 1,\n                                \"ip\": \"127.0.0.1\",\n                                \"username\": \"admin\",\n                                \"email\": \"adminnnn@gmail.com\"}\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 60,
        "wires": [
            [
                "628861ecaffdd199"
            ]
        ]
    },
    {
        "id": "e024d96abd8db50d",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 10",
        "func": "msg.payload = {\n    username: \"admin\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 60,
        "wires": [
            [
                "0735f4f7e253d9ff"
            ]
        ]
    },
    {
        "id": "0735f4f7e253d9ff",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "3a0409017fc4f1c6"
            ]
        ]
    },
    {
        "id": "874778ae2c6269d5",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 640,
        "y": 320,
        "wires": [
            [
                "3a151b1457550f19",
                "80e71e5b3a9987e3"
            ]
        ]
    },
    {
        "id": "fb7d092cbc2b3bae",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 780,
        "y": 400,
        "wires": [
            [
                "da03deba3ea2dd74",
                "bf1329060a55d649"
            ]
        ]
    },
    {
        "id": "da03deba3ea2dd74",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 11",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"İd ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 400,
        "wires": [
            [
                "8849c6b68bda9f54"
            ]
        ]
    },
    {
        "id": "4ad93377802abd24",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 720,
        "y": 560,
        "wires": [
            [
                "038d59594cb1d004",
                "32f677e1f08af311"
            ]
        ]
    },
    {
        "id": "038d59594cb1d004",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 12",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"İd ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\nif (msg.payload.done) {\n    msg.error = {\n        message: \"Tamamlanan işler için hatrılatma kurulamaz.\"\n\n    }\n    return [null, msg]\n}\n\nreturn msg",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 560,
        "wires": [
            [
                "bc87785276fb47aa"
            ],
            [
                "3fe50177df38e5d5"
            ]
        ]
    },
    {
        "id": "3fe50177df38e5d5",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "0d9de66c032182ee"
        ],
        "x": 1015,
        "y": 600,
        "wires": []
    },
    {
        "id": "3b348019945addcb",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 13",
        "func": "const date = new Date();\nconst now = date.getTime();\n\n\n\n\nif (!msg.payload) {\n    msg.error = { message: \"İd ile eşleşen bir kayıt bulunamadı.\" };\n    return [null, msg];\n}\n//checkOwner ile aynı işleve sahip\nif (msg.payload.stamp.username !== msg.user.username && !msg.user.roles.includes(\"admin\")) {\n    msg.error = { message: \"Bu işlemi yapma yetkiniz yok.\" };\n    return [null, msg];\n\n}\nif (msg.req.params.type === \"update\" && msg.payload.done){\n    msg.error={\n        message:\"Tamamlanan işlemler güncellenemez.\"\n    }\n    return[null,message]\n}\nmsg.todo = msg.payload\nmsg.payload=[\n    {\n        _id: msg.formData.id \n    \n    }\n]\n\nif (msg.req.params.type === \"trash\") {\n    msg.operation = \"deleteOne\"\n}\nelse if (msg.req.params.type === \"schedule\") {\n\n    let scheduleOptions = msg.scheduleOptions = {\n        \"crontiMethod\": \"onIntervalTime\",\n        \"crontiArgs\": [msg.formData.datetime, msg.formData.datetime]\n\n    }\n    msg.payload.push({\n       $set: {\n            schedule : {\n                formData: msg.formData,\n                options: scheduleOptions\n            },\n            scheduleOptions \n\n       }\n    })\n    msg.operation = \"updateOne\"\n}\nelse {\n    msg.operation = \"updateOne\"\n    switch (msg.req.params.type) {\n        case \"complete\":\n            msg.payload.push({\n                $set: {\n                    done: true\n                }\n            })\n            break;\n        case \"open\":\n            msg.payload.push({\n                $set: {\n                    done: false\n                }\n            })\n            break;\n        case \"update\":\n            msg.payload.push({\n                $set: {\n                    name: msg.formData.name\n                }\n            })\n       \n            break\n    }\n\n    msg.payload[1].$set.stamp = {\n\n        createdAt: now,\n        ip: msg.req.ip,\n        username: msg.todo.stamp.username,\n        email: msg.todo.stamp.email\n    };\n    msg.payload[1].$set.date = date.toLocaleDateString(\"TR\");\n    msg.payload[1].$set.time = date.toLocaleTimeString(\"TR\");\n}\n\nreturn msg.scheduleOptions ? [msg,null,msg]: msg;",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "57b02d8d3afe193d"
            ],
            [
                "f16e87a73a2bca1c"
            ],
            [
                "48e4eb29eb40f099"
            ]
        ]
    },
    {
        "id": "f16e87a73a2bca1c",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "0d9de66c032182ee"
        ],
        "x": 1155,
        "y": 740,
        "wires": []
    },
    {
        "id": "0aa673e16f8a5deb",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 820,
        "y": 660,
        "wires": [
            [
                "c84305e6addf86a2",
                "d71456e7d0348f67"
            ]
        ]
    },
    {
        "id": "ddce2a96140f568c",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 820,
        "y": 720,
        "wires": [
            [
                "3b348019945addcb",
                "75cbbd0dd59b97b8"
            ]
        ]
    },
    {
        "id": "57b02d8d3afe193d",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1210,
        "y": 700,
        "wires": [
            [
                "f1cc8872d2dad325",
                "f4e9ddf91c51374c"
            ]
        ]
    },
    {
        "id": "f1cc8872d2dad325",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 1400,
        "y": 700,
        "wires": []
    },
    {
        "id": "48e4eb29eb40f099",
        "type": "change",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "scheduleOptions",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 780,
        "wires": [
            [
                "b9d62a5bb705c0b9"
            ]
        ]
    },
    {
        "id": "b9d62a5bb705c0b9",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "5ff5e40705b66bba"
        ],
        "x": 1445,
        "y": 780,
        "wires": []
    },
    {
        "id": "6fe22c45d7bd8b29",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "forEach",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "e238ca9bc8b59996"
            ]
        ]
    },
    {
        "id": "a8fe7b3d36c039bb",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 14",
        "func": "msg.payload = {\n    schedule :{\n        $exists:1  \n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 160,
        "wires": [
            [
                "6fe22c45d7bd8b29"
            ]
        ]
    },
    {
        "id": "e238ca9bc8b59996",
        "type": "change",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.schedule.options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            [
                "c09cfc20fee5e041"
            ]
        ]
    },
    {
        "id": "b63ccea2096548dc",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "todo",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1230,
        "y": 900,
        "wires": [
            [
                "8ff931d74aa8f67d"
            ]
        ]
    },
    {
        "id": "9ec8900d3213056e",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "delete schedule",
        "func": "if(msg.todo?.schedule?.response){\n    msg.payload= {\n        _id:msg.todo.schedules.response.self._id\n    }\n    return msg; \n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 900,
        "wires": [
            [
                "98bfc8fd26d731bc"
            ]
        ]
    },
    {
        "id": "98bfc8fd26d731bc",
        "type": "crontinject",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "todo",
                "v": "todo",
                "vt": "msg"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 1060,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "80dd60df305f4ec1",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 920,
        "y": 980,
        "wires": [
            [
                "4ebebb578f3ba841",
                "467fe4ace1a81d69"
            ]
        ]
    },
    {
        "id": "5c249bb7db68a85a",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1880,
        "y": 1080,
        "wires": [
            [
                "1626e9a096df1090",
                "9c66e241d55b78b8"
            ]
        ]
    },
    {
        "id": "7eda7851b489ba76",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1900,
        "y": 1140,
        "wires": [
            [
                "55f1c6274cb9f5fd",
                "436f8560603ea586"
            ]
        ]
    },
    {
        "id": "55f1c6274cb9f5fd",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 15",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"İd ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\nif (msg.formData.username) {\n    msg.error = {\n        message: \"Kullanıcı adı güncellenemez.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\nmsg.formData.active = msg.formData.status === \"active\"\ndelete msg.formData.status\n\nmsg.todo = msg.payload\n\nconst date = new Date()\nconst now = date.getTime()\n\nmsg.payload = [\n    {\n        _id: msg.formData.id\n    },\n    {\n        $set: {\n            ...msg.formData,\n            stamp: {\n                createdAt: now,\n                ip: msg.req.ip,\n                username: msg.user.username || \"\",\n                email: msg.user.email || \"\"\n            },\n            date: date.toLocaleDateString(\"TR\"), // DD.AA.YYYY\n            time: date.toLocaleTimeString(\"TR\") // SS:DD:NN\n        }\n    }\n]\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 1140,
        "wires": [
            [
                "c57d517efe805875"
            ],
            [
                "09fe0e0e8538b543"
            ]
        ]
    },
    {
        "id": "c57d517efe805875",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2270,
        "y": 1100,
        "wires": [
            [
                "28ad7b4a6dc36192",
                "b019616a7d7f8fe7"
            ]
        ]
    },
    {
        "id": "28ad7b4a6dc36192",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/user-list"
        },
        "x": 2440,
        "y": 1100,
        "wires": []
    },
    {
        "id": "da5a40583179d5b4",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 800,
        "y": 1220,
        "wires": [
            [
                "3ad6f80a24356381",
                "395ee69144185b4e"
            ]
        ]
    },
    {
        "id": "3ad6f80a24356381",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 16",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"İd ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n    \n\n}\n\nmsg.hasUser= msg.payload.roles.includes(\"user\")\nmsg.hasAdmin = msg.payload.roles.includes(\"admin\")\n\nmsg.payload = { ...msg.payload, ...msg.formData }\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1220,
        "wires": [
            [
                "4e529e9ebabf6a8c",
                "7198bb4917bca7e4"
            ],
            [
                "b189499f127796bf"
            ]
        ]
    },
    {
        "id": "b189499f127796bf",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "3f543f7aee49f5ed"
        ],
        "x": 1145,
        "y": 1240,
        "wires": []
    },
    {
        "id": "63d035f068afb724",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 500,
        "y": 1600,
        "wires": [
            [
                "fb3ff0a4527659ba",
                "aaf24a4ec1019c79"
            ]
        ]
    },
    {
        "id": "fb3ff0a4527659ba",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 7",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"Kullanıcı adı veya parola hatalı.\"\n    };\n    return [null, msg];\n}\nmsg.user = msg.payload\nreturn msg",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "61194be046650638",
                "7917c29d5a5b6974"
            ],
            [
                "dd3dcef35baec74a",
                "36061283e14e804e"
            ]
        ]
    },
    {
        "id": "dd3dcef35baec74a",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "3e1eca658fbb31c4"
        ],
        "x": 795,
        "y": 1640,
        "wires": []
    },
    {
        "id": "3a151b1457550f19",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 260,
        "wires": []
    },
    {
        "id": "bf1329060a55d649",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 360,
        "wires": []
    },
    {
        "id": "32f677e1f08af311",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "d71456e7d0348f67",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 620,
        "wires": []
    },
    {
        "id": "75cbbd0dd59b97b8",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 780,
        "wires": []
    },
    {
        "id": "f4e9ddf91c51374c",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 640,
        "wires": []
    },
    {
        "id": "8ff931d74aa8f67d",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 900,
        "wires": []
    },
    {
        "id": "467fe4ace1a81d69",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 880,
        "wires": []
    },
    {
        "id": "9c66e241d55b78b8",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 1020,
        "wires": []
    },
    {
        "id": "436f8560603ea586",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "b019616a7d7f8fe7",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2420,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3ba3927a83c3b09c",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 17",
        "func": "msg.payload = [{\n    _id:{\n        $ne: msg.formData.id\n\n    },\n    email: msg.formData.email\n}]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1040,
        "wires": [
            [
                "d9ed0fe5c6ae5c44"
            ]
        ]
    },
    {
        "id": "d9ed0fe5c6ae5c44",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1050,
        "y": 1040,
        "wires": [
            [
                "2ea0d9c61f604f25"
            ]
        ]
    },
    {
        "id": "2ea0d9c61f604f25",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 18",
        "func": "if(msg.payload){\n    msg.error = {\n        message: `Bu eposta adresi kullanılmaktadır.`,\n        formData: msg.formData\n    }\n    msg.payload = msg.formData\n    return msg.req.headers.referer.includes(\"user-edit\") ? [null, null, msg] : [null, msg]\n}\nreturn msg\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1040,
        "wires": [
            [
                "18431a90e3241614"
            ],
            [
                "7d6812bf8ff11c91"
            ],
            [
                "1be902d6c20e3035",
                "57022c44f91938d4"
            ]
        ]
    },
    {
        "id": "395ee69144185b4e",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1be902d6c20e3035",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "9b5da92d863ede82"
        ],
        "x": 1325,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c8d507412b537e3c",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1280,
        "wires": []
    },
    {
        "id": "7198bb4917bca7e4",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f6d5fa0af3b4dab0",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "3f543f7aee49f5ed"
        ],
        "x": 815,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2f610f865658eca7",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "9b5da92d863ede82"
        ],
        "x": 815,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e1d6a6892a20b778",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 1240,
        "wires": []
    },
    {
        "id": "dbfe81134c9dc46c",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 1220,
        "wires": []
    },
    {
        "id": "b69b7dbe427beba9",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 960,
        "wires": []
    },
    {
        "id": "f4c5a0775ddfecf8",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fe63c536970f658d",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1160,
        "wires": []
    },
    {
        "id": "12150dc27d38887a",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1080,
        "wires": []
    },
    {
        "id": "57022c44f91938d4",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7d6812bf8ff11c91",
        "type": "link out",
        "z": "0cc4c0c6c2328040",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "3f543f7aee49f5ed"
        ],
        "x": 1325,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0b7cd97bfe22a2d7",
        "type": "subflow:eda0bfeec9aa9bc2",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "x": 580,
        "y": 980,
        "wires": [
            [
                "6057ca61bb10d6f7"
            ]
        ]
    },
    {
        "id": "03071e67272323ca",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/kayitt/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1940,
        "wires": [
            [
                "26364bb6a6933a8a",
                "e35fd8ead8e73fd2"
            ]
        ]
    },
    {
        "id": "fbff58f8c08a5669",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 2160,
        "wires": []
    },
    {
        "id": "9ab3f6f7bfc84971",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\"> --->\n    <video class=\"delete-effect\" src=\"/video/trashx.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <video class=\"check-effect\" src=\"/video/check.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\" integrity=\"sha512-t7Few9xlddEmgd3oKZQahkNI4dS6l80+eGEzFQiqtyVYdvcSG2D3Iub77R20BdotfRPA9caaRkg1tyaJiPmO0g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" /> \n    <style>\n        body {\n            background-color: #404159;\n\n        }\n        {{css}}\n    </style>\n    \n</head>\n<body>\n\n\n<div id=\"login\">\n<div class=\"container\">\n            <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n                <div id=\"login-column\" class=\"col-md-5\">\n                      {{#error}}\n                        <div class =\"alert alert-danger my-3 shadow\">\n                            {{message}}\n                        </div>\n                        {{/error}}\n                        \n                    <div id=\"login-box\" class=\"col-md-12\">\n                      \n                        \n                        <form  id=\"login-form\" class=\"form\" action=\"/kayitt/add\" method=\"post\">\n                          \n                            <div class=\"form-group\">\n                                <label   for=\"username\" class=\"text-black\">Kullanıcı Adı:</label><br>\n                                <input required type=\"text\" name=\"username\" id=\"username\" class=\"form-control\" value=\"{{payload.username}}\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\" class=\"text-black\">Şifre:</label><br>\n                                <input required type=\"password\" name=\"password\" id=\"password\" class=\"form-control\" value= \"{{formData.password}}\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"email\" class=\"text-black\">E-Posta:</label><br>\n                                <input required type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" value= \"{{formData.email}}\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"text\" class=\"text-black\">İsim Soyisim:</label><br>\n                                <input required type=\"text\" name=\"displayName\" id=\"displayName\" class=\"form-control\" value= \"{{formData.displayName}}\">\n                            </div>\n                            <div class=\"form-group\">\n                               \n                                <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md mt-3 w-100\" value=\"kayıt Ol\">\n                              \n                                  \n                            </div>\n                           \n                            \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>",
        "output": "str",
        "x": 460,
        "y": 2160,
        "wires": [
            [
                "fbff58f8c08a5669"
            ]
        ]
    },
    {
        "id": "bed8063cf967fb47",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "css",
        "field": "css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "plain",
        "template": "body {\n    margin: 0;\n    padding: 0;\n    background-color: #404159;\n   \n}\n\n#login .container #login-row #login-column #login-box {\n    margin-top: 120px;\n    max-width: 600px;\n  \n    border: 1px solid #9C9C9C;\n    background-color: #EAEAEA;\n}\n\n#login .container #login-row #login-column #login-box #login-form {\n    padding: 20px;\n}\n\n#login .container #login-row #login-column #login-box #login-form #register-link {\n    margin-top: -85px;\n}\n.alert-danger {\n    max-width: 600px;\n    /* login-box ile aynı genişlik */\n    margin: 20px auto;\n    /* Ortalamak için */\n}\n",
        "output": "str",
        "x": 290,
        "y": 2160,
        "wires": [
            [
                "9ab3f6f7bfc84971"
            ]
        ]
    },
    {
        "id": "bf6053a017251807",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 20",
        "func": "msg.payload = [{\n    _id:{\n        $ne: msg.formData.id\n\n    },\n    email: msg.formData.email\n}]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1940,
        "wires": [
            [
                "9524291237a63b81",
                "95dbd1872c346604"
            ]
        ]
    },
    {
        "id": "9524291237a63b81",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 690,
        "y": 1940,
        "wires": [
            [
                "c4b6a0897b85d61b"
            ]
        ]
    },
    {
        "id": "c4b6a0897b85d61b",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 21",
        "func": "if(msg.payload){\n    msg.error = {\n        message: `Bu eposta adresi kullanılmaktadır.`,\n        formData: msg.formData\n    }\n    msg.payload = msg.formData\n    return msg.req.headers.referer.includes(\"user-edit\") ? [null, null, msg] : [null, msg]\n}\nreturn msg\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1940,
        "wires": [
            [
                "e6d831773ceb2d83",
                "d920c2c54692ddba"
            ],
            [],
            [
                "044205b947924a55"
            ]
        ]
    },
    {
        "id": "044205b947924a55",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 2020,
        "wires": []
    },
    {
        "id": "f322484d796776e5",
        "type": "bcrypt",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "formData.password",
        "assignment": "assign",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 1290,
        "y": 1940,
        "wires": [
            [
                "9c04eb7a2a8eb8f0",
                "75d21e25565da98b"
            ]
        ]
    },
    {
        "id": "e6d831773ceb2d83",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 22",
        "func": "if(msg.formData.password) return msg\ndelete msg.formData.password \nreturn [null,msg]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1920,
        "wires": [
            [
                "f322484d796776e5",
                "4abbb95a6544e7d7"
            ],
            [
                "9c04eb7a2a8eb8f0",
                "c1a8c08fa9478e3a"
            ]
        ]
    },
    {
        "id": "9c04eb7a2a8eb8f0",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "db.user.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\n\nif (msg.req.params.type === \"add\") {\n    msg.payload = {\n        id: now,\n        active: true,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: (msg.user && msg.user.username) || \"\",\n            email: (msg.user && msg.user.email) || \"\"\n        },\n        roles: [\"user\"],\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\"),\n        ...msg.formData\n    }\n    return msg\n}\n\nmsg.payload = [{\n    _id: msg.formData.id\n}]\nreturn [null, msg]\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 2040,
        "wires": [
            [
                "93c5f5b03c281c98",
                "c9d73def4efaf897"
            ],
            [
                "a4b977dff363c478",
                "7a4e2bb3610db1c0"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err"
        ]
    },
    {
        "id": "336835d9d94a100f",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/user-list"
        },
        "x": 1920,
        "y": 1880,
        "wires": []
    },
    {
        "id": "93c5f5b03c281c98",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1660,
        "y": 1920,
        "wires": [
            [
                "336835d9d94a100f",
                "80f51a6113bf6653"
            ]
        ]
    },
    {
        "id": "a4b977dff363c478",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1680,
        "y": 1980,
        "wires": [
            [
                "fac891460bad7e67"
            ]
        ]
    },
    {
        "id": "fac891460bad7e67",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 23",
        "func": "if (!msg.payload) {\n    msg.error = {\n        message: \"İd ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\nif (msg.formData.username) {\n    msg.error = {\n        message: \"Kullanıcı adı güncellenemez.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\nmsg.formData.active = msg.formData.status === \"active\"\ndelete msg.formData.status\n\nmsg.todo = msg.payload\n\nconst date = new Date()\nconst now = date.getTime()\n\nmsg.payload = [\n    {\n        _id: msg.formData.id\n    },\n    {\n        $set: {\n            ...msg.formData,\n            stamp: {\n                createdAt: now,\n                ip: msg.req.ip,\n                username: msg.user.username || \"\",\n                email: msg.user.email || \"\"\n            },\n            date: date.toLocaleDateString(\"TR\"), // DD.AA.YYYY\n            time: date.toLocaleTimeString(\"TR\") // SS:DD:NN\n        }\n    }\n]\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1880,
        "y": 1980,
        "wires": [
            [
                "2f94e985ef1006dc"
            ],
            []
        ]
    },
    {
        "id": "2f94e985ef1006dc",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2050,
        "y": 1940,
        "wires": [
            [
                "6325af81df980adc",
                "7cad0f176b492b8e"
            ]
        ]
    },
    {
        "id": "6325af81df980adc",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/user-list"
        },
        "x": 2220,
        "y": 1940,
        "wires": []
    },
    {
        "id": "80f51a6113bf6653",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1860,
        "wires": []
    },
    {
        "id": "7cad0f176b492b8e",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2200,
        "y": 2000,
        "wires": []
    },
    {
        "id": "26364bb6a6933a8a",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "validation",
        "func": "msg.req.params = { type: \"add\" };\n\nconst typeLookup = {\n    add: {\n        text: \"Eklemek\",\n        requireArg: [\"username\",\"password\",\"email\",\"displayName\"],\n        validation: {\n            email(data,formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data) }\n        }\n\n    }\n}\n\nif (!Object.keys(typeLookup).includes(msg.req.params.type)) {\n    msg.error = {\n        message: `${msg.req.params.type} geçersiz bir parametre değeridir.`\n       , formData: msg.formData\n    }\n    return msg.req.headers.referer.includes(\"user-edit\")? [null,null,msg] : [null, msg]\n}\n\nlet fields = Object.keys(msg.payload)\n\nif (!typeLookup[msg.req.params.type].requireArg.every(arg => {\n    return (\n        ((typeLookup[msg.req.params.type].validation && typeLookup[msg.req.params.type].validation[arg]) \n            ? typeLookup[msg.req.params.type].validation[arg](msg.payload[arg],msg.payload) \n            : true) \n        && (arg.startsWith(\"!\") ? !fields.includes(arg.substr(1)) : fields.includes(arg))\n    );\n})) {\n    msg.error = {\n        message: `${typeLookup[msg.req.params.type].text} istediğiniz elemanın ${typeLookup[msg.req.params.type].requireArg} bilgisi olmamalı.`\n        ,formData: msg.formData\n    }\n    msg.referer= msg.req.headers.referer\n    return msg.req.headers.referer.includes(\"user-edit\") ? [null, null, msg] : [null, msg]\n}\n\nmsg.payload.roles = Array.isArray(msg.payload.roles) ? msg.payload.roles : [msg.payload.roles]\nmsg.formData = msg.payload\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1940,
        "wires": [
            [
                "bf6053a017251807",
                "7337e4204c541c4f"
            ]
        ],
        "outputLabels": [
            "Valid"
        ]
    },
    {
        "id": "604e9e1a4909840f",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/kayit",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2160,
        "wires": [
            [
                "bed8063cf967fb47"
            ]
        ]
    },
    {
        "id": "7337e4204c541c4f",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 2000,
        "wires": []
    },
    {
        "id": "95dbd1872c346604",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 2040,
        "wires": []
    },
    {
        "id": "e35fd8ead8e73fd2",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 2020,
        "wires": []
    },
    {
        "id": "58432aaafa9a91cd",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 2320,
        "wires": []
    },
    {
        "id": "d920c2c54692ddba",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 2080,
        "wires": []
    },
    {
        "id": "4abbb95a6544e7d7",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 2040,
        "wires": []
    },
    {
        "id": "c1a8c08fa9478e3a",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1860,
        "wires": []
    },
    {
        "id": "c9d73def4efaf897",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 2140,
        "wires": []
    },
    {
        "id": "75d21e25565da98b",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1900,
        "wires": []
    },
    {
        "id": "7a4e2bb3610db1c0",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 2120,
        "wires": []
    },
    {
        "id": "5b8442a0e4d022a4",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/sifre",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2260,
        "wires": [
            [
                "c4dbda16acfaea9b"
            ]
        ]
    },
    {
        "id": "b2116bf6e19a552f",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 2260,
        "wires": []
    },
    {
        "id": "21346c17521e673e",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\"> --->\n    <video class=\"delete-effect\" src=\"/video/trashx.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <video class=\"check-effect\" src=\"/video/check.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\" integrity=\"sha512-t7Few9xlddEmgd3oKZQahkNI4dS6l80+eGEzFQiqtyVYdvcSG2D3Iub77R20BdotfRPA9caaRkg1tyaJiPmO0g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" /> \n    <style>\n        body {\n            background-color: #404159;\n\n        }\n        {{css}}\n    </style>\n    \n</head>\n<body>\n\n\n<div id=\"login\">\n<div class=\"container\">\n            <div id=\"login-row\" class=\"row justify-content-center align-items-center\">\n                <div id=\"login-column\" class=\"col-md-5\">\n                      {{#error}}\n                        <div class =\"alert alert-danger my-3 shadow\">\n                            {{message}}\n                        </div>\n                        {{/error}}\n                        \n                    <div id=\"login-box\" class=\"col-md-12\">\n                      \n                        \n                        <form  id=\"login-form\" class=\"form\" action=\"/mail\" method=\"post\">\n                          \n                           \n                            <div class=\"form-group\">\n                                <label for=\"email\" class=\"text-black\">E-Posta:</label><br>\n                                <input required type=\"email\" name=\"email\" id=\"email\" class=\"form-control\" value= \"{{formData.email}}\">\n                            <div class=\"form-group\">\n                               \n                                <input type=\"submit\" name=\"submit\" class=\"btn btn-info btn-md mt-3 w-100\" value=\"E-Posta Gönder\">\n                              \n                                  \n                            </div>\n                           \n                            \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>",
        "output": "str",
        "x": 460,
        "y": 2260,
        "wires": [
            [
                "b2116bf6e19a552f"
            ]
        ]
    },
    {
        "id": "c4dbda16acfaea9b",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "css",
        "field": "css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "plain",
        "template": "body {\n    margin: 0;\n    padding: 0;\n    background-color: #404159;\n   \n}\n\n#login .container #login-row #login-column #login-box {\n    margin-top: 120px;\n    max-width: 600px;\n  \n    border: 1px solid #9C9C9C;\n    background-color: #EAEAEA;\n}\n\n#login .container #login-row #login-column #login-box #login-form {\n    padding: 20px;\n}\n\n#login .container #login-row #login-column #login-box #login-form #register-link {\n    margin-top: -85px;\n}\n.alert-danger {\n    max-width: 600px;\n    /* login-box ile aynı genişlik */\n    margin: 20px auto;\n    /* Ortalamak için */\n}\n",
        "output": "str",
        "x": 290,
        "y": 2260,
        "wires": [
            [
                "21346c17521e673e"
            ]
        ]
    },
    {
        "id": "367b621c7929adca",
        "type": "http in",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "url": "/mail",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 2400,
        "wires": [
            [
                "238e90246adb3a7b"
            ]
        ]
    },
    {
        "id": "238e90246adb3a7b",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "validation",
        "func": "msg.payload = {\n  email: msg.payload.email\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 2400,
        "wires": [
            [
                "5e731b28cca529a4"
            ]
        ],
        "outputLabels": [
            "Valid"
        ]
    },
    {
        "id": "5e731b28cca529a4",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 430,
        "y": 2400,
        "wires": [
            [
                "37d6c5c713c71599"
            ]
        ]
    },
    {
        "id": "37d6c5c713c71599",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 24",
        "func": "if (Array.isArray(msg.payload) && msg.payload.length > 0) {\n  const user = msg.payload[0];\n  const newPassword = Math.random().toString(36).slice(-8);\n  msg.newPassword = newPassword;\n\n  // Yeni şifreyi formData.password olarak ata, bcrypt nodu bunu hashleyecek\n  msg.formData = {\n    ...user,\n    password: newPassword\n  };\n\n  msg.payload = {\n    filter: { email: user.email },\n    update: {\n      $set: {}  // boş bırak, update işini function 25 nodu yapacak\n    }\n  };\n} else {\n  node.error(\"Kullanıcı bulunamadı\");\n  return null;\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2400,
        "wires": [
            [
                "56119ea28659114b"
            ]
        ]
    },
    {
        "id": "56119ea28659114b",
        "type": "bcrypt",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "formData.password",
        "assignment": "assign",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 830,
        "y": 2400,
        "wires": [
            [
                "1493e145d549d184"
            ]
        ]
    },
    {
        "id": "833887ec3cc549fc",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1070,
        "y": 2400,
        "wires": [
            [
                "8dc4b9429d3d1d61"
            ]
        ]
    },
    {
        "id": "44847dcd893f0208",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Merhaba {{payload.username}},\n\nYeni şifreniz: {{newPassword}}\nLütfen giriş yaptıktan sonra şifrenizi değiştirin.",
        "output": "str",
        "x": 1460,
        "y": 2420,
        "wires": [
            [
                "5ba03bd8beb34498",
                "f455ce1c4a1815eb"
            ]
        ]
    },
    {
        "id": "5ba03bd8beb34498",
        "type": "e-mail",
        "z": "0cc4c0c6c2328040",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1610,
        "y": 2400,
        "wires": []
    },
    {
        "id": "1493e145d549d184",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 25",
        "func": "msg.payload = [\n  { _id: msg.formData._id }, // user id\n  { $set: { password: msg.formData.password } } // hashlenmiş şifre buraya gelecek\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2500,
        "wires": [
            [
                "833887ec3cc549fc"
            ]
        ]
    },
    {
        "id": "8dc4b9429d3d1d61",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 26",
        "func": "if(msg.schedules){\n    msg.payload=[\n        {\n            _id: msg.formData.id\n        },\n        {\n            $set:{\n                schedule:  msg.response\n            }\n        }\n    ]\n    return [null,msg]\n}\n\n\n// Zamanı geldi, mail ayarlarını yap\nmsg.from = \"noreply <noreply@todo.com>\";\nmsg.to = msg.formData.email;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2400,
        "wires": [
            [
                "44847dcd893f0208"
            ]
        ]
    },
    {
        "id": "f455ce1c4a1815eb",
        "type": "http response",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/user-list"
        },
        "x": 1640,
        "y": 2460,
        "wires": []
    },
    {
        "id": "da6b1677d630a72e",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1680,
        "wires": []
    },
    {
        "id": "2425d59ec5b1287f",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 1660,
        "wires": []
    },
    {
        "id": "a1f39f85475d3b10",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 1640,
        "wires": []
    },
    {
        "id": "9c4f960f2290d59a",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1740,
        "wires": []
    },
    {
        "id": "aaf24a4ec1019c79",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1740,
        "wires": []
    },
    {
        "id": "7917c29d5a5b6974",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1520,
        "wires": []
    },
    {
        "id": "36061283e14e804e",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1680,
        "wires": []
    },
    {
        "id": "440ddbef0f113d97",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0732f3fc3b999c52",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 1740,
        "wires": []
    },
    {
        "id": "39eef1aa1a022816",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1c7f7571ad3c4f56",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "tokenBlacklist",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "709742027dfeeeae",
                "5664bcfe8a6528c2"
            ]
        ]
    },
    {
        "id": "5664bcfe8a6528c2",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 1880,
        "wires": []
    },
    {
        "id": "75a6ce7cb11808bb",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1900,
        "wires": []
    },
    {
        "id": "041b1521704a16c9",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 1900,
        "wires": []
    },
    {
        "id": "cff747a9b59fc9b3",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 28",
        "func": "const token = msg.cookies && msg.cookies.token ? msg.cookies.token : null;\n\nif (!token) {\n    msg.statusCode = 401;\n    msg.payload = { error: \"No token provided\" };\n    return [null, msg.payload];\n}\nmsg.payload = { token: token };\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 1560,
        "wires": [
            [
                "a4618357d6212201"
            ],
            [
                "df799efa8cc18325"
            ]
        ]
    },
    {
        "id": "a4618357d6212201",
        "type": "mongodb4",
        "z": "0cc4c0c6c2328040",
        "clientNode": "ac1719013b8f4fb6",
        "mode": "collection",
        "collection": "tokenBlacklist",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1750,
        "y": 1560,
        "wires": [
            [
                "551050a1bf9a8fba",
                "0ccca25264459cc7"
            ]
        ]
    },
    {
        "id": "551050a1bf9a8fba",
        "type": "function",
        "z": "0cc4c0c6c2328040",
        "name": "function 29",
        "func": "if (!msg.payload || (Array.isArray(msg.payload) && msg.payload.length === 0)) {\n   \n    return msg\n} else {\n    msg.statusCode = 401;\n    msg.payload = { error: \"Token is revoked\" };\n    return [null, msg];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1560,
        "wires": [
            [
                "6ca6611536db4c0c"
            ],
            [
                "ef9c85252723fda9"
            ]
        ]
    },
    {
        "id": "ef9c85252723fda9",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2100,
        "y": 1620,
        "wires": []
    },
    {
        "id": "0ccca25264459cc7",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1960,
        "y": 1680,
        "wires": []
    },
    {
        "id": "df799efa8cc18325",
        "type": "debug",
        "z": "0cc4c0c6c2328040",
        "name": "debug 58",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1760,
        "y": 1640,
        "wires": []
    },
    {
        "id": "80e71e5b3a9987e3",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "s",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <title>Yapılacaklar Listesi</title>\n\n  <!-- SurveyJS CSS (jQuery sürümü) -->\n  <link href=\"https://unpkg.com/survey-jquery@1.9.109/survey.min.css\" rel=\"stylesheet\"/>\n\n  <!-- Bootstrap & Icons -->\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"/>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\"/>\n\n  <style>\n    body { background-color: #1E1E2F; color: #FFFFFF; }\n    #solPencere.offcanvas-start { width: 250px; max-width: 80vw; }\n  </style>\n</head>\n<body>\n\n  <!-- Menü Butonu -->\n  <button class=\"btn btn-primary position-fixed top-0 start-0 m-4\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#solPencere\">\n    <i class=\"bi bi-list\"></i>\n  </button>\n\n  <!-- Sol Menü -->\n  <div class=\"offcanvas offcanvas-start text-bg-dark\" tabindex=\"-1\" id=\"solPencere\">\n    <div class=\"offcanvas-header\">\n      <h5 class=\"offcanvas-title\">Menü</h5>\n      <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\"></button>\n    </div>\n    <div class=\"offcanvas-body\">\n      <ul class=\"list-unstyled\">\n        <span class=\"btn btn-danger\">{{user.displayName}}</span>\n        <li><a href=\"/\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-house\"></i> Ana Sayfa</a></li>\n        <li><a href=\"/gorevlerim\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-check2-square\"></i> Görevlerim</a></li>\n        <li><a href=\"/ayarlar\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-gear\"></i> Ayarlar</a></li>\n      </ul>\n    </div>\n  </div>\n\n  <!-- Sayfa İçeriği -->\n  <div class=\"container mt-5\">\n    <!-- SurveyJS Formu -->\n    <div class=\"row mb-4\">\n      <div class=\"col-md-10 offset-md-1\">\n        <div id=\"surveyContainer\"></div>\n      </div>\n    </div>\n\n    <!-- Yapılacaklar Listesi -->\n    <div class=\"row\">\n      <div class=\"col-md-10 offset-md-1\">\n        <!-- … (senin mevcut Mustache tablon) … -->\n      </div>\n    </div>\n  </div>\n\n  <!-- Sağ Üst Kullanıcı Menüsü -->\n  <div class=\"btn btn-danger position-fixed top-0 end-0 m-2 shadow-sm d-flex align-items-center gap-1 z-3 user-info-bar\">\n    <div class=\"btn btn-light scroll-text-container small-text\">\n      <span class=\"scroll-text\">{{user.displayName}}</span>\n    </div>\n    <div class=\"btn btn-light scroll-text-container small-text\">\n      <span class=\"scroll-text\">{{user.username}}</span>\n    </div>\n    <a href=\"/logout\" class=\"btn btn-sm btn-danger px-2 py-1\" title=\"Çıkış\"><i class=\"bi bi-power\"></i></a>\n  </div>\n\n  <!-- Bootstrap JS -->\n  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n  <!-- jQuery ve Survey‑jQuery UMD -->\n  <script src=\"https://unpkg.com/jquery@3.6.0/dist/jquery.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-jquery@1.9.109/survey.jquery.min.js\"></script>\n\n  <script>\n    const surveyJson = {\n      title: \"Yeni Görev Ekle\",\n      pages: [{\n        name: \"taskPage\",\n        elements: [{\n          type: \"text\",\n          name: \"taskName\",\n          title: \"TEST YAZISI\",\n          isRequired: true,\n          maxLength: 200,\n          placeholder: \"TEST EKLEME\"\n        }]\n      }],\n      showCompletePage: false,\n      completeText: \"Görev Ekle\"\n    };\n\n    // Model oluştur\n    const survey = new Survey.Model(surveyJson);\n\n    // Submit handler\n    survey.onComplete.add(sender => {\n      fetch(\"/survey-endpoint\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(sender.data)\n      })\n      .then(res => res.json())\n      .then(() => {\n        alert(\"Görev eklendi.\");\n        location.reload();\n      })\n      .catch(err => {\n        console.error(\"Görev eklenemedi:\", err);\n        alert(\"Hata oluştu.\");\n      });\n    });\n\n    // Render: jQuery plugin\n    $(\"#surveyContainer\").Survey({ model: survey });\n  </script>\n\n  <!-- Scroll animasyonu -->\n  <style>\n    .scroll-text-container { max-width: 70px; overflow: hidden; white-space: nowrap; position: relative; background-color: #E2E8F0; padding: 2px 6px; border-radius: 5px; }\n    .scroll-text { display: inline-block; transition: transform 0.3s ease; }\n    .scroll-animate:hover .scroll-text { animation: scrollText linear infinite; }\n    @keyframes scrollText { 0% { transform: translateX(0); } 100% { transform: translateX(-100%); } }\n  </style>\n\n  <script>\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      document.querySelectorAll(\".scroll-text-container\").forEach(container => {\n        const text = container.querySelector(\".scroll-text\");\n        if (text.scrollWidth > container.offsetWidth) {\n          container.classList.add(\"scroll-animate\");\n          text.style.animationDuration = `${text.scrollWidth/50}s`;\n        }\n      });\n    });\n  </script>\n\n</body>\n</html>\n",
        "output": "str",
        "x": 850,
        "y": 300,
        "wires": [
            [
                "bc87b02a2a309ca1"
            ]
        ]
    },
    {
        "id": "5707cd1953814b38",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html> \n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <!-- <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\"> --->\n    <video class=\"delete-effect\" src=\"/video/trs.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <video class=\"check-effect\" src=\"/video/check.mp4\" style=\"width: 60px; display: none;\" muted></video>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\" integrity=\"sha512-t7Few9xlddEmgd3oKZQahkNI4dS6l80+eGEzFQiqtyVYdvcSG2D3Iub77R20BdotfRPA9caaRkg1tyaJiPmO0g==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" /> \n    <style>\n        body {\n            background-color: #1E1E2F;\n            color: #FFFFFF;\n        }\n    </style>\n</head>\n<body>\n    <button class=\"btn btn-primary position-fixed top-0 start-0 m-4\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#solPencere\">\n    <i class=\"bi bi-list\"></i> \n</button>\n<div class=\"offcanvas offcanvas-start text-bg-dark\" tabindex=\"-1\" id=\"solPencere\">\n    <div class=\"offcanvas-header\">\n        <h5 class=\"offcanvas-title\">Menü</h5>\n        <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\"></button>\n    </div>\n    <div class=\"offcanvas-body\">\n        <ul class=\"list-unstyled\">\n             <span class =\"btn btn-danger\"> {{user.displayName}} </span>\n            <li><a href=\"/\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-house\"></i> Ana Sayfa</a></li>\n            <li><a href=\"/gorevlerim\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-check2-square\"></i> Görevlerim</a></li>\n            <li><a href=\"/ayarlar\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-gear\"></i> Ayarlar</a></li>\n        </ul>\n    </div>\n</div>\n    <div class=\"container mt-5\">\n        <!-- Görev Ekleme Formu -->\n        <div class=\"row mb-4\">\n            <div class=\"col-md-10 offset-md-1\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form id=\"task-form\" action=\"/opt/add\" method=\"POST\">\n                    <div class=\"input-group input-group-lg\">\n                        <input required type=\"text\" name=\"name\" id=\"task-input\" class=\"form-control {{#error}}border-danger{{/error}}\" placeholder=\"Bugün ne planın var?\">\n                        <button style=\"background-color: #F59E0B; color:white\" class=\"btn btn-outline-secondary\" type=\"button\" id=\"clear-btn\">Temizle</button>\n                        <button style=\"background-color: #3B82F6; color: white;\" class=\"btn btn-primary\" type=\"submit\">Ekle</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <!-- Yapılacaklar Tablosu -->\n        <div class=\"row\">\n            <div class=\"col-md-10 offset-md-1\">\n                <table style=\"background-color: #2B2C3E;\" class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th style=\"background-color: #2B2C3E; color: white;\">İş</th>\n                            <th style=\"width: 300px; background-color: #2B2C3E; color: white;\">İşlemler</th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"task-body\">\n                        {{#payload}}\n                        <tr valign=\"middle\">\n                           <td>\n                                {{#done}}\n                                    <div class=\"text-muted\"><del>{{name}}</del></div>\n                                {{/done}}\n                                {{^done}}\n                                    <div>{{name}}</div>\n                                {{/done}}\n\n                                <div class=\"badge bg-secondary\">\n                                    <small>\n                                        <i class=\"bi bi-calendar\"></i> {{date}} {{time}} |\n                                        <i class=\"bi bi-person\"></i> {{stamp.username}}\n                                    </small>\n                                </div>\n                            </td>\n                            <td align=\"right\">\n                                <div class=\"btn-group\">\n                                    <form method=\"post\">\n                                        <input type=\"hidden\" name=\"id\" value=\"{{_id}}\"/>\n                                        {{#done}}\n                                        <button data-bs-toggle=\"tooltip\" data-bs-title=\"Aç\" type=\"submit\" formaction=\"/opt/open\" class=\"btn btn-warning\"><i class=\"bi bi-arrow-clockwise\"></i></button>\n                                        {{/done}}\n                                        {{^done}}\n                                        <a href=\"/edit/{{_id}}\" data-bs-toggle=\"tooltip\" data-bs-title=\"Düzenle\" class=\"btn btn-sm\" style=\"background-color: #3B82F6; color: white;\"><i class=\"bi bi-pencil\"></i></a>\n                                        <a href=\"/schedule/{{_id}}\" data-bs-toggle=\"tooltip\" data-bs-title=\"Hatırlatıcı\" class=\"btn btn-sm\" style=\"background-color: #64748B; color: white;\"><i class=\"bi bi-bell\"></i></a>\n                                        <button type=\"submit\" data-bs-toggle=\"tooltip\" data-bs-title=\"Tamamla\" formaction=\"/opt/complete\" class=\"btn btn-sm\" style=\"background-color: #10B981; color: white;\"><i class=\"bi bi-check2\"></i></button>\n                                        {{/done}}\n                                        <button \n                                            type=\"submit\" \n                                            data-bs-toggle=\"tooltip\" \n                                            data-bs-title=\"Sil\" \n                                            formaction=\"/opt/trash\"\n                                            class=\"btn btn-sm sil-btn\"\n                                            style=\"background-color: #EF4444; color: white;\"\n                                        >\n                                            <i class=\"bi bi-trash3\"></i>\n                                        </button>\n                                        <span class=\"video-container\" style=\"display: inline-block;\"></span>\n                                    </form>\n                                </div>\n                            </td>\n                        </tr>\n                        {{/payload}}\n                        {{^payload}}\n                        <tr class=\"text-muted\">\n                            <td colspan=\"2\">Henüz hiç görev eklenmedi.</td>\n                        </tr>\n                        {{/payload}}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n\n    <!-- Kullanıcı Butonu -->\n    {{#hasFounder}}\n    <div class=\"position-relative\">\n        <a href=\"/user-list\" class=\"btn btn-danger btn-lg position-fixed bottom-0 end-0 m-5 shadow-sm\"><i class=\"bi bi-person-fill\"></i></a>\n    </div>\n    {{/hasFounder}}\n   <!-- Üst Sağ Kullanıcı Menüsü -->\n<div class=\"btn btn-danger position-fixed top-0 end-0 m-2 shadow-sm d-flex align-items-center gap-1 z-3 user-info-bar\">\n    <div class=\" btn btn-light scroll-text-container small-text\">\n        <span class=\"scroll-text\">{{user.displayName}}</span>\n    </div>\n    <div class=\" btn btn-light scroll-text-container small-text\">\n        <span class=\"scroll-text\">{{user.username}}</span>\n    </div>\n    <a href=\"/logout\" class=\"btn btn-sm btn-danger px-2 py-1\" title=\"Çıkış\">\n        <i class=\"bi bi-power\"></i>\n    </a>\n</div>\n\n    <!-- JS -->\n    <script>\n        document.getElementById(\"clear-btn\").addEventListener(\"click\", function () {\n            document.getElementById(\"task-input\").value = \"\";\n        });\n    </script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    </script>\n\n    <style>\n        .flash-then-fade {\n            animation: flashRed 0.3s ease, fadeOut 0.5s ease 0.3s forwards;\n        }\n\n        @keyframes slideOutRight {\n            from { transform: translateX(0); opacity: 1; }\n            to   { transform: translateX(100%); opacity: 0; height: 0; }\n        }\n\n        .slide-out {\n            animation: slideOutRight 0.5s ease forwards;\n        }\n\n        .video-replace {\n            width: 32px;\n            height: 32px;\n            padding: 0;\n            border: none;\n            background: none;\n        }\n\n        .sil-video {\n            width: 32px;\n            height: 32px;\n            display: inline-block;\n            object-fit: contain;\n            vertical-align: middle;\n            margin-bottom: 2px;\n        }\n    </style>\n\n    <script>\n        document.addEventListener(\"DOMContentLoaded\", () => {\n            document.querySelectorAll(\".sil-btn\").forEach(button => {\n                button.addEventListener(\"click\", function (e) {\n                    e.preventDefault();\n                    const form = this.closest(\"form\");\n                    this.style.display = \"none\";\n\n                    const video = document.createElement(\"video\");\n                    video.src = \"/video/trs.mp4\";\n                    video.classList.add(\"sil-video\");\n                    video.muted = true;\n                    video.playsInline = true;\n                    video.autoplay = true;\n\n                    this.insertAdjacentElement(\"afterend\", video);\n\n                    video.addEventListener(\"ended\", () => {\n                        form.action = this.getAttribute(\"formaction\");\n                        form.submit();\n                    });\n\n                    video.play().catch(err => console.error(\"Trash video oynatılmadı:\", err));\n                });\n            });\n\n            document.querySelectorAll('button[formaction=\"/opt/complete\"]').forEach(button => {\n                button.addEventListener(\"click\", function (e) {\n                    e.preventDefault();\n                    const form = this.closest(\"form\");\n                    this.style.display = \"none\";\n\n                    const video = document.createElement(\"video\");\n                    video.src = \"/video/check.mp4\";\n                    video.classList.add(\"sil-video\");\n                    video.muted = true;\n                    video.playsInline = true;\n                    video.autoplay = true;\n\n                    this.insertAdjacentElement(\"afterend\", video);\n\n                    video.addEventListener(\"ended\", () => {\n                        form.action = this.getAttribute(\"formaction\");\n                        form.submit();\n                    });\n\n                    video.play().catch(err => console.error(\"Check video oynatılmadı:\", err));\n                });\n            });\n        });\n    </script>\n<style>\n.scroll-text-container {\n    max-width: 70px;\n    overflow: hidden;\n    white-space: nowrap;\n    position: relative;\n    background-color: #E2E8F0;\n    padding: 2px 6px;\n    border-radius: 5px;\n}\n\n.scroll-text {\n    display: inline-block;\n    transition: transform 0.3s ease;\n}\n\n.scroll-animate:hover .scroll-text {\n    animation: scrollText linear infinite;\n}\n\n@keyframes scrollText {\n    0% { transform: translateX(0); }\n    100% { transform: translateX(-100%); }\n}\n</style>\n<script>\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll(\".scroll-text-container\").forEach(container => {\n        const text = container.querySelector(\".scroll-text\");\n\n        const containerWidth = container.offsetWidth;\n        const textWidth = text.scrollWidth;\n\n        if (textWidth > containerWidth) {\n            container.classList.add(\"scroll-animate\");\n\n            const baseSpeed = 50; // px/sn\n            const duration = textWidth / baseSpeed;\n\n            text.style.animationDuration = `${duration}s`;\n        }\n    });\n});\n</script>\n<style>\n  #solPencere.offcanvas-start {\n    width: 250px;\n    max-width: 80vw;\n  }\n</style>\n\n\n\n</body>\n</html>",
        "output": "str",
        "x": 760,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0382e00e1a363796",
        "type": "template",
        "z": "0cc4c0c6c2328040",
        "name": "surveyJs",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n    <!-- SurveyJS CSS -->\n    <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <!-- Bootstrap ve ikonlar -->\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.13.1/font/bootstrap-icons.min.css\">\n    <style>\n        body {\n            background-color: #1E1E2F;\n            color: #FFFFFF;\n            padding-top: 60px;\n        }\n        .survey-container {\n            background-color: #2B2C3E;\n            padding: 20px;\n            border-radius: 8px;\n            margin-bottom: 20px;\n        }\n        .task-list-container {\n            max-width: 800px;\n            margin: 0 auto;\n        }\n        .task-item {\n            transition: all 0.3s ease;\n            margin-bottom: 10px;\n        }\n        .completed-task {\n            opacity: 0.7;\n        }\n        .completed-task .task-text {\n            text-decoration: line-through;\n            color: #6c757d;\n        }\n        .offcanvas-start {\n            width: 280px;\n        }\n        /* SurveyJS tema uyumluluğu */\n        .sv-root-modern {\n            --sjs-primary-backcolor: #3B82F6;\n            --sjs-primary-forecolor: white;\n        }\n    </style>\n</head>\n<body>\n    <!-- Menü Çubuğu -->\n    <nav class=\"navbar navbar-dark bg-dark fixed-top\">\n        <div class=\"container-fluid\">\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#solPencere\">\n                <i class=\"bi bi-list\"></i>\n            </button>\n            <span class=\"navbar-brand me-auto\">Yapılacaklar Listesi</span>\n            <div class=\"d-flex align-items-center\">\n                <span class=\"badge bg-light text-dark me-2\">{{user.displayName}}</span>\n                <a href=\"/logout\" class=\"btn btn-sm btn-outline-light\">\n                    <i class=\"bi bi-box-arrow-right\"></i>\n                </a>\n            </div>\n        </div>\n    </nav>\n\n    <!-- Yan Menü -->\n    <div class=\"offcanvas offcanvas-start text-bg-dark\" tabindex=\"-1\" id=\"solPencere\">\n        <div class=\"offcanvas-header\">\n            <h5 class=\"offcanvas-title\">Menü</h5>\n            <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"offcanvas\"></button>\n        </div>\n        <div class=\"offcanvas-body\">\n            <ul class=\"list-unstyled\">\n                <li><a href=\"/\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-house\"></i> Ana Sayfa</a></li>\n                <li><a href=\"/gorevlerim\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-check2-square\"></i> Görevlerim</a></li>\n                <li><a href=\"/ayarlar\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-gear\"></i> Ayarlar</a></li>\n                {{#hasFounder}}\n                <li><a href=\"/user-list\" class=\"text-white text-decoration-none d-block py-2\"><i class=\"bi bi-people\"></i> Kullanıcılar</a></li>\n                {{/hasFounder}}\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"container mt-4\">\n        <!-- SurveyJS Form Container -->\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-8\">\n                <div id=\"surveyContainer\" class=\"survey-container\"></div>\n                \n                <!-- Görev Listesi -->\n                <div id=\"taskListContainer\" class=\"task-list-container\"></div>\n            </div>\n        </div>\n    </div>\n\n    <!-- JavaScript Kütüphaneleri -->\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n\n    <!-- Uygulama JavaScript -->\n    <script>\n        // SurveyJS Form Tanımı (Yapılacaklar listesi için)\n        const surveyJson = {\n            \"title\": \"Yeni Görev Ekle\",\n            \"logoPosition\": \"right\",\n            \"pages\": [\n                {\n                    \"name\": \"page1\",\n                    \"elements\": [\n                        {\n                            \"type\": \"text\",\n                            \"name\": \"taskName\",\n                            \"title\": \"Görev Adı\",\n                            \"isRequired\": true,\n                            \"placeholder\": \"Bugün ne yapacaksınız?\"\n                        },\n                        {\n                            \"type\": \"dropdown\",\n                            \"name\": \"priority\",\n                            \"title\": \"Öncelik\",\n                            \"choices\": [\"Düşük\", \"Normal\", \"Yüksek\", \"Kritik\"],\n                            \"defaultValue\": \"Normal\"\n                        },\n                        {\n                            \"type\": \"checkbox\",\n                            \"name\": \"options\",\n                            \"title\": \"Seçenekler\",\n                            \"choices\": [\n                                { \"value\": \"reminder\", \"text\": \"Hatırlatıcı ekle\" },\n                                { \"value\": \"important\", \"text\": \"Önemli\" }\n                            ]\n                        },\n                        {\n                            \"type\": \"comment\",\n                            \"name\": \"notes\",\n                            \"title\": \"Notlar\",\n                            \"placeholder\": \"Ek notlarınız...\"\n                        }\n                    ]\n                }\n            ],\n            \"showQuestionNumbers\": \"off\",\n            \"completeText\": \"Görev Ekle\"\n        };\n\n        // SurveyJS Formu Başlatma\n        const survey = new Survey.Model(surveyJson);\n        \n        // Tema ayarları\n        survey.applyTheme(\"default\");\n        \n        // Form gönderildiğinde yapılacaklar\n        survey.onComplete.add((sender, options) => {\n            const taskData = {\n                name: sender.data.taskName,\n                priority: sender.data.priority || \"Normal\",\n                options: sender.data.options || [],\n                notes: sender.data.notes || \"\",\n                createdAt: new Date().toISOString()\n            };\n            \n            // Sunucuya gönderme\n            addTaskToServer(taskData);\n            \n            // Formu temizle\n            sender.clear();\n        });\n\n        // Sayfa yüklendiğinde\n        document.addEventListener(\"DOMContentLoaded\", function() {\n            // SurveyJS formunu render et\n            $(\"#surveyContainer\").Survey({ model: survey });\n            \n            // Mevcut görevleri yükle\n            loadTasksFromServer();\n            \n            // Tooltip'leri etkinleştir\n            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n            tooltipTriggerList.map(function (tooltipTriggerEl) {\n                return new bootstrap.Tooltip(tooltipTriggerEl);\n            });\n        });\n\n        // Görevleri listeye ekleme fonksiyonu\n        function addTaskToList(task, isNew = false) {\n            const taskList = document.getElementById(\"taskListContainer\");\n            const taskElement = document.createElement(\"div\");\n            \n            // Öncelik için renk belirle\n            let priorityClass = \"\";\n            switch(task.priority) {\n                case \"Yüksek\": priorityClass = \"border-warning\"; break;\n                case \"Kritik\": priorityClass = \"border-danger\"; break;\n                case \"Düşük\": priorityClass = \"border-success\"; break;\n                default: priorityClass = \"border-primary\";\n            }\n            \n            taskElement.className = `task-item card ${priorityClass} ${task.completed ? 'completed-task' : ''}`;\n            taskElement.innerHTML = `\n                <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                        <div class=\"task-text\">${task.completed ? `<del>${task.name}</del>` : task.name}</div>\n                        <div class=\"task-actions\">\n                            ${task.completed ? '' : `\n                            <button class=\"btn btn-sm btn-outline-success complete-btn me-2\" data-task-id=\"${task._id}\" data-bs-toggle=\"tooltip\" title=\"Tamamlandı\">\n                                <i class=\"bi bi-check2\"></i>\n                            </button>\n                            <a href=\"/edit/${task._id}\" class=\"btn btn-sm btn-outline-primary me-2\" data-bs-toggle=\"tooltip\" title=\"Düzenle\">\n                                <i class=\"bi bi-pencil\"></i>\n                            </a>\n                            `}\n                            <button class=\"btn btn-sm btn-outline-danger delete-btn\" data-task-id=\"${task._id}\" data-bs-toggle=\"tooltip\" title=\"Sil\">\n                                <i class=\"bi bi-trash3\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"mt-2\">\n                        ${task.options.includes('important') ? '<span class=\"badge bg-danger me-2\">Önemli</span>' : ''}\n                        <span class=\"badge bg-secondary me-2\">${task.priority} Öncelik</span>\n                        ${task.notes ? `<div class=\"mt-2 small text-muted\">${task.notes}</div>` : ''}\n                        <small class=\"text-muted\">\n                            <i class=\"bi bi-calendar\"></i> ${formatDate(task.createdAt)}\n                        </small>\n                    </div>\n                </div>\n            `;\n            \n            if (isNew) {\n                taskList.prepend(taskElement);\n                // Yeni eklenen görev için animasyon\n                taskElement.style.opacity = 0;\n                setTimeout(() => {\n                    taskElement.style.transition = \"opacity 0.5s ease\";\n                    taskElement.style.opacity = 1;\n                }, 10);\n            } else {\n                taskList.appendChild(taskElement);\n            }\n            \n            // Silme butonu event'i\n            taskElement.querySelector(\".delete-btn\")?.addEventListener(\"click\", function() {\n                const taskId = this.getAttribute(\"data-task-id\");\n                deleteTaskFromServer(taskId, taskElement);\n            });\n            \n            // Tamamlama butonu event'i\n            taskElement.querySelector(\".complete-btn\")?.addEventListener(\"click\", function() {\n                const taskId = this.getAttribute(\"data-task-id\");\n                completeTaskOnServer(taskId, taskElement);\n            });\n        }\n\n        // Tarih formatlama\n        function formatDate(dateString) {\n            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n            return new Date(dateString).toLocaleDateString('tr-TR', options);\n        }\n\n        // Sunucu ile iletişim fonksiyonları\n        async function loadTasksFromServer() {\n            try {\n                const response = await fetch('/api/tasks');\n                const tasks = await response.json();\n                tasks.forEach(task => addTaskToList(task));\n            } catch (error) {\n                console.error(\"Görevler yüklenirken hata:\", error);\n                showAlert('Görevler yüklenirken bir hata oluştu', 'danger');\n            }\n        }\n\n        async function addTaskToServer(taskData) {\n            try {\n                const response = await fetch('/api/tasks', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(taskData)\n                });\n                \n                if (response.ok) {\n                    const newTask = await response.json();\n                    addTaskToList(newTask, true);\n                    showAlert('Görev başarıyla eklendi', 'success');\n                } else {\n                    throw new Error(await response.text());\n                }\n            } catch (error) {\n                console.error(\"Görev eklenirken hata:\", error);\n                showAlert('Görev eklenirken bir hata oluştu', 'danger');\n            }\n        }\n\n        async function deleteTaskFromServer(taskId, taskElement) {\n            if (!confirm('Bu görevi silmek istediğinize emin misiniz?')) return;\n            \n            try {\n                const response = await fetch(`/api/tasks/${taskId}`, { method: 'DELETE' });\n                \n                if (response.ok) {\n                    taskElement.classList.add(\"slide-out\");\n                    setTimeout(() => taskElement.remove(), 500);\n                    showAlert('Görev başarıyla silindi', 'success');\n                } else {\n                    throw new Error(await response.text());\n                }\n            } catch (error) {\n                console.error(\"Görev silinirken hata:\", error);\n                showAlert('Görev silinirken bir hata oluştu', 'danger');\n            }\n        }\n\n        async function completeTaskOnServer(taskId, taskElement) {\n            try {\n                const response = await fetch(`/api/tasks/${taskId}/complete`, { method: 'PUT' });\n                \n                if (response.ok) {\n                    taskElement.classList.add(\"completed-task\");\n                    taskElement.querySelector('.task-text').innerHTML = `<del>${taskElement.querySelector('.task-text').textContent}</del>`;\n                    showAlert('Görev tamamlandı olarak işaretlendi', 'success');\n                } else {\n                    throw new Error(await response.text());\n                }\n            } catch (error) {\n                console.error(\"Görev tamamlanırken hata:\", error);\n                showAlert('Görev tamamlanırken bir hata oluştu', 'danger');\n            }\n        }\n\n        // Uyarı mesajı gösterme\n        function showAlert(message, type) {\n            const alert = document.createElement('div');\n            alert.className = `alert alert-${type} alert-dismissible fade show position-fixed top-20 start-50 translate-middle-x`;\n            alert.style.zIndex = 1100;\n            alert.innerHTML = `\n                ${message}\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n            `;\n            \n            document.body.appendChild(alert);\n            \n            setTimeout(() => {\n                alert.classList.remove('show');\n                setTimeout(() => alert.remove(), 150);\n            }, 3000);\n        }\n    </script>\n\n    <!-- Animasyon stilleri -->\n    <style>\n        .slide-out {\n            animation: slideOutRight 0.5s ease forwards;\n        }\n        \n        @keyframes slideOutRight {\n            from { transform: translateX(0); opacity: 1; }\n            to   { transform: translateX(100%); opacity: 0; height: 0; margin: 0; padding: 0; border: 0; }\n        }\n        \n        .task-item {\n            transition: all 0.3s ease;\n            margin-bottom: 10px;\n            border-left: 4px solid;\n        }\n        \n        .alert {\n            min-width: 300px;\n            text-align: center;\n        }\n    </style>\n</body>\n</html>",
        "output": "str",
        "x": 1340,
        "y": 260,
        "wires": [
            []
        ]
    }
]